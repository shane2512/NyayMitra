{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000';\nexport const analyzeContract = async file => {\n  const formData = new FormData();\n  formData.append('file', file);\n  try {\n    // Don't set Content-Type header - let axios handle it for FormData\n    const response = await axios.post(`${API_BASE_URL}/analyze`, formData);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('API Error:', error);\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n      error: 'Network error'\n    };\n  }\n};\nexport const healthCheck = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/health`);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      error: 'Network error'\n    };\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","analyzeContract","file","formData","FormData","append","response","post","data","error","_error$response","console","healthCheck","get","_error$response2"],"sources":["D:/New folder/nyaymitra/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5000';\n\nexport const analyzeContract = async (file) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  \n  try {\n    // Don't set Content-Type header - let axios handle it for FormData\n    const response = await axios.post(`${API_BASE_URL}/analyze`, formData);\n    return response.data;\n  } catch (error) {\n    console.error('API Error:', error);\n    throw error.response?.data || { error: 'Network error' };\n  }\n};\n\nexport const healthCheck = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/health`);\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || { error: 'Network error' };\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,OAAO,MAAMC,eAAe,GAAG,MAAOC,IAAI,IAAK;EAC7C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAE7B,IAAI;IACF;IACA,MAAMI,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,UAAU,EAAEG,QAAQ,CAAC;IACtE,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACdC,OAAO,CAACF,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IAClC,MAAM,EAAAC,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAI;MAAEC,KAAK,EAAE;IAAgB,CAAC;EAC1D;AACF,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMP,KAAK,CAACc,GAAG,CAAC,GAAGb,YAAY,SAAS,CAAC;IAC1D,OAAOM,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAK,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAAL,KAAK,CAACH,QAAQ,cAAAQ,gBAAA,uBAAdA,gBAAA,CAAgBN,IAAI,KAAI;MAAEC,KAAK,EAAE;IAAgB,CAAC;EAC1D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}